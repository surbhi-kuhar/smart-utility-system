// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  password     String
  name         String
  mobilenumber String
  address      String
  bookings     Booking[]
  ratings      Rating[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model ServiceProvider {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  email              String    @unique
  mobilenumber       String
  password           String
  name               String
  age                Int
  address            String
  service            String
  availabilitystatus String    @default("available")
  bookings           Booking[]
  ratings            Rating[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}

model Booking {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  userId            String          @db.ObjectId
  serviceProviderId String          @db.ObjectId
  status            String          @default("pending")
  user              User            @relation(fields: [userId], references: [id])
  serviceProvider   ServiceProvider @relation(fields: [serviceProviderId], references: [id])
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model Rating {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  userId            String          @db.ObjectId
  serviceProviderId String          @db.ObjectId
  review            String?
  rating            Int
  user              User            @relation(fields: [userId], references: [id])
  serviceProvider   ServiceProvider @relation(fields: [serviceProviderId], references: [id])
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}
